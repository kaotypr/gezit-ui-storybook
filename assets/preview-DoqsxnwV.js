import { d as u } from "./index-DrFu-skq.js"; import "./index-CP2yOfOm.js"; import { U as _ } from "./index-Ur3hJZK9.js"; const { useParameter: b, addons: g, useEffect: A, useMemo: x, definePreview: w } = __STORYBOOK_MODULE_PREVIEW_API__, { deprecate: v } = __STORYBOOK_MODULE_CLIENT_LOGGER__; var S = Object.defineProperty, l = (e, t) => { for (var r in t) S(e, r, { get: t[r], enumerable: !0 }) }, O = {}; l(O, { initialGlobals: () => R }); var a = "themes", f = `storybook/${a}`, c = "theme", m = {}, D = { REGISTER_THEMES: `${f}/REGISTER_THEMES` }, R = { [c]: "" }, P = {}; l(P, { initializeThemeState: () => E, pluckThemeFromContext: () => d, useThemeParameters: () => k }); function d({ globals: e }) { return e[c] || "" } function k(e) {
    return v(u`The useThemeParameters function is deprecated. Please access parameters via the context directly instead e.g.
    - const { themeOverride } = context.parameters.themes ?? {};
    `), e ? e.parameters[a] ?? m : b(a, m)
} function E(e, t) { g.getChannel().emit(D.REGISTER_THEMES, { defaultTheme: t, themes: e }) } var C = "html", B = "data-theme", I = ({ themes: e, defaultTheme: t, parentSelector: r = C, attributeName: h = B }) => (E(Object.keys(e), t), (p, o) => { let { themeOverride: i } = o.parameters[a] ?? {}, s = d(o); return A(() => { let n = document.querySelector(r), T = i || s || t; n && n.setAttribute(h, e[T]) }, [i, s]), p() }); const L = { base: "dark", brandTitle: "@gezit", brandUrl: "https://gitlab.sicepat.tech/frontend/web/gezit-ui", brandImage: "/gezit-ui-storybook/images/sicepat-brand-white.svg", colorPrimary: "#667085", colorSecondary: "#667085", appBg: "#222630", appContentBg: "rgb(19 22 30)", appBorderColor: "#323945", textColor: "#A6ADBA", barTextColor: "#A6ADBA", barSelectedColor: "#C3D0EA", barBg: "#191D24" }, M = _(L), N = { parameters: { backgrounds: { values: [{ name: "light", value: "var(--background)" }, { name: "dark", value: "var(--background)" }], default: "light" }, docs: { theme: M }, controls: { matchers: { color: /(background|color)$/i, date: /Date$/i } }, options: { storySort: { method: "alphabetical", order: ["Introduction", "Components", "Utilities"] } } } }, F = [I({ themes: { light: "light", dark: "dark" }, defaultTheme: "light", attributeName: "data-theme" })]; export { F as decorators, N as default };
